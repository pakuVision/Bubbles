#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.0.16.0.3)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Bubble", "Bubble_1", "Bubble_2", "Bubble_3", "Bubble_4", "Bubble_5", "Bubble_6", "Bubble_7", "BubbleMaterial"]
    def Sphere "Bubble" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/BubbleMaterial> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double radius = 0.1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.2, 0.2)
                float radius = 0.1
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitCustomComponent "RealityKitContent_BubbleComponent"
        {
            float3 direction = (0.1, 0.1, 0)
            uniform token info:id = "RealityKitContent.BubbleComponent"
        }

        def RealityKitComponent "RigidBody"
        {
            bool gravityEnabled = 0
            uniform token info:id = "RealityKit.RigidBody"
            float linearDamping = 0

            def RealityKitStruct "massFrame"
            {
                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }

        def RealityKitComponent "MotionState"
        {
            uniform token info:id = "RealityKit.MotionState"
            float3 m_userSetLinearVelocity = (0.04, 0.04, 0)
            uint m_userSetLinearVelocityVersion = 1
        }
    }

    def Material "BubbleMaterial"
    {
        float inputs:AnimationSpeed = 0.01 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-1349.9727, -8.855469)
                    int stackingOrderInSubgraph = 2598
                }
            }
        )
        float inputs:NoiseScale = 30 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-1326.104, 106.865036)
                    int stackingOrderInSubgraph = 1974
                }
            }
        )
        float inputs:Pop = 1 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-408.09314, 830.9881)
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/BubbleMaterial/PreviewSurface.outputs:out>
        token outputs:realitykit:vertex
        string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:mtlx:surface"]
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (655.1141, 43.537373)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 1982

        def Shader "PreviewSurface"
        {
            uniform token info:id = "ND_UsdPreviewSurface_surfaceshader"
            float inputs:clearcoat
            float inputs:clearcoatRoughness
            color3f inputs:diffuseColor = (0.6970061, 0.69162714, 0.7309923) (
                colorSpace = "srgb_displayp3"
            )
            color3f inputs:diffuseColor.connect = None
            color3f inputs:emissiveColor.connect = </Root/BubbleMaterial/Add.outputs:out>
            float inputs:ior = 1
            float inputs:metallic
            float3 inputs:normal
            float inputs:occlusion.connect = </Root/BubbleMaterial/Step.outputs:out>
            float inputs:opacity = 0.15
            float inputs:opacity.connect = </Root/BubbleMaterial/Remap_1.outputs:out>
            float inputs:opacityThreshold.connect = None
            float inputs:roughness = 0
            token outputs:out
            float2 ui:nodegraph:node:pos = (413.36407, 43.537373)
            int ui:nodegraph:node:stackingOrder = 2597
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:roughness", "Advanced", "inputs:emissiveColor", "inputs:diffuseColor"]
        }

        def Shader "Add"
        {
            uniform token info:id = "ND_add_color3"
            color3f inputs:in1.connect = </Root/BubbleMaterial/Add_1.outputs:out>
            color3f inputs:in2.connect = </Root/BubbleMaterial/GenerateColorNoise.outputs:Multiply_out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-224.06868, 53.8821)
            int ui:nodegraph:node:stackingOrder = 1833
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def NodeGraph "GenerateColorNoise"
        {
            float inputs:AnimationSpeed (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (79.25, 142.5)
                        int stackingOrderInSubgraph = 1937
                    }
                }
            )
            prepend float inputs:AnimationSpeed.connect = </Root/BubbleMaterial.inputs:AnimationSpeed>
            color3f inputs:NoiseColor = (0.43858653, 0.6452964, 0.381987) (
                colorSpace = "srgb_displayp3"
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (970.98047, 287.4336)
                        int stackingOrderInSubgraph = 1938
                    }
                }
            )
            float3 inputs:NoiseOffset = (0, 0, 0) (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (141.34766, -68.859375)
                        int stackingOrderInSubgraph = 1943
                    }
                }
            )
            float inputs:NoiseScale (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (497.5, 271)
                        int stackingOrderInSubgraph = 1939
                    }
                }
            )
            prepend float inputs:NoiseScale.connect = </Root/BubbleMaterial.inputs:NoiseScale>
            prepend color3f outputs:Multiply_out.connect = </Root/BubbleMaterial/GenerateColorNoise/Multiply.outputs:out>
            float2 ui:nodegraph:node:pos = (-779.62946, -7.6133356)
            int ui:nodegraph:node:stackingOrder = 1978
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:NoiseColor"]
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1327.75, 195.75)

            def Shader "Add_1"
            {
                uniform token info:id = "ND_add_vector3"
                float3 inputs:in1.connect = </Root/BubbleMaterial/GenerateColorNoise/Add_5.outputs:out>
                float3 inputs:in2.connect = </Root/BubbleMaterial/GenerateColorNoise/Position.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (664.25, 93.5)
                int ui:nodegraph:node:stackingOrder = 1934
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Time"
            {
                uniform token info:id = "ND_time_float"
                float outputs:out
                float2 ui:nodegraph:node:pos = (79.25, 27.5)
                int ui:nodegraph:node:stackingOrder = 1934
            }

            def Shader "Add_5"
            {
                uniform token info:id = "ND_add_vector3FA"
                float3 inputs:in1.connect = </Root/BubbleMaterial/GenerateColorNoise.inputs:NoiseOffset>
                float inputs:in2.connect = </Root/BubbleMaterial/GenerateColorNoise/Multiply_6.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (497.5, 63.5)
                int ui:nodegraph:node:stackingOrder = 1934
            }

            def Shader "Multiply_6"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/BubbleMaterial/GenerateColorNoise/Time.outputs:out>
                float inputs:in2.connect = </Root/BubbleMaterial/GenerateColorNoise.inputs:AnimationSpeed>
                float outputs:out
                float2 ui:nodegraph:node:pos = (289, 45.5)
                int ui:nodegraph:node:stackingOrder = 1934
            }

            def Shader "Multiply_1"
            {
                uniform token info:id = "ND_multiply_vector3FA"
                float3 inputs:in1.connect = </Root/BubbleMaterial/GenerateColorNoise/Add_1.outputs:out>
                float inputs:in2.connect = </Root/BubbleMaterial/GenerateColorNoise.inputs:NoiseScale>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (781, 154.5)
                int ui:nodegraph:node:stackingOrder = 1934
            }

            def Shader "Position"
            {
                uniform token info:id = "ND_position_vector3"
                string inputs:space = "object"
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (497.5, 162.5)
                int ui:nodegraph:node:stackingOrder = 1934
            }

            def Shader "Noise3D"
            {
                uniform token info:id = "ND_noise3d_color3"
                float inputs:pivot = 0
                prepend float3 inputs:position.connect = </Root/BubbleMaterial/GenerateColorNoise/Multiply_1.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (954.68854, 127.91784)
                int ui:nodegraph:node:stackingOrder = 1941
            }

            def Shader "Multiply"
            {
                uniform token info:id = "ND_multiply_color3"
                prepend color3f inputs:in1.connect = </Root/BubbleMaterial/GenerateColorNoise/Noise3D.outputs:out>
                color3f inputs:in2.connect = </Root/BubbleMaterial/GenerateColorNoise.inputs:NoiseColor>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (1148, 195.75)
                int ui:nodegraph:node:stackingOrder = 1934
            }
        }

        def NodeGraph "GenerateColorNoise_1"
        {
            float inputs:AnimationSpeed (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (79.25, 142.5)
                        int stackingOrderInSubgraph = 1937
                    }
                }
            )
            float inputs:AnimationSpeed.connect = </Root/BubbleMaterial.inputs:AnimationSpeed>
            color3f inputs:NoiseColor = (0.53584886, 0.3240757, 0.56936616) (
                colorSpace = "srgb_displayp3"
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (970.98047, 287.4336)
                        int stackingOrderInSubgraph = 1938
                    }
                }
            )
            float3 inputs:NoiseOffset (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (354.50278, -20.667929)
                        int stackingOrderInSubgraph = 1938
                    }
                }
            )
            float inputs:NoiseScale (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (497.5, 271)
                        int stackingOrderInSubgraph = 1939
                    }
                }
            )
            float inputs:NoiseScale.connect = </Root/BubbleMaterial.inputs:NoiseScale>
            color3f outputs:Multiply_out.connect = </Root/BubbleMaterial/GenerateColorNoise_1/Multiply.outputs:out>
            float2 ui:nodegraph:node:pos = (-774.87115, 207.40005)
            int ui:nodegraph:node:stackingOrder = 1979
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:NoiseScale"]
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1327.75, 195.75)

            def Shader "Add_1"
            {
                uniform token info:id = "ND_add_vector3"
                float3 inputs:in1.connect = </Root/BubbleMaterial/GenerateColorNoise_1/Add_5.outputs:out>
                float3 inputs:in2.connect = </Root/BubbleMaterial/GenerateColorNoise_1/Position.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (664.25, 93.5)
                int ui:nodegraph:node:stackingOrder = 1934
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Time"
            {
                uniform token info:id = "ND_time_float"
                float outputs:out
                float2 ui:nodegraph:node:pos = (79.25, 27.5)
                int ui:nodegraph:node:stackingOrder = 1934
            }

            def Shader "Add_5"
            {
                uniform token info:id = "ND_add_vector3FA"
                float3 inputs:in1.connect = </Root/BubbleMaterial/GenerateColorNoise_1.inputs:NoiseOffset>
                float inputs:in2.connect = </Root/BubbleMaterial/GenerateColorNoise_1/Multiply_6.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (497.5, 63.5)
                int ui:nodegraph:node:stackingOrder = 1934
            }

            def Shader "Multiply_6"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/BubbleMaterial/GenerateColorNoise_1/Time.outputs:out>
                float inputs:in2.connect = </Root/BubbleMaterial/GenerateColorNoise_1.inputs:AnimationSpeed>
                float outputs:out
                float2 ui:nodegraph:node:pos = (289, 45.5)
                int ui:nodegraph:node:stackingOrder = 1934
            }

            def Shader "Multiply_1"
            {
                uniform token info:id = "ND_multiply_vector3FA"
                float3 inputs:in1.connect = </Root/BubbleMaterial/GenerateColorNoise_1/Add_1.outputs:out>
                float inputs:in2.connect = </Root/BubbleMaterial/GenerateColorNoise_1.inputs:NoiseScale>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (781, 154.5)
                int ui:nodegraph:node:stackingOrder = 1934
            }

            def Shader "Position"
            {
                uniform token info:id = "ND_position_vector3"
                string inputs:space = "object"
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (497.5, 162.5)
                int ui:nodegraph:node:stackingOrder = 1934
            }

            def Shader "Noise3D"
            {
                uniform token info:id = "ND_noise3d_color3"
                float inputs:pivot = 0
                prepend float3 inputs:position.connect = </Root/BubbleMaterial/GenerateColorNoise_1/Multiply_1.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (954.68854, 127.91784)
                int ui:nodegraph:node:stackingOrder = 1937
            }

            def Shader "Multiply"
            {
                uniform token info:id = "ND_multiply_color3"
                prepend color3f inputs:in1.connect = </Root/BubbleMaterial/GenerateColorNoise_1/Noise3D.outputs:out>
                color3f inputs:in2.connect = </Root/BubbleMaterial/GenerateColorNoise_1.inputs:NoiseColor>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (1148, 195.75)
                int ui:nodegraph:node:stackingOrder = 1934
            }
        }

        def NodeGraph "GenerateColorNoise_2"
        {
            float inputs:AnimationSpeed (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (79.25, 142.5)
                        int stackingOrderInSubgraph = 1947
                    }
                }
            )
            float inputs:AnimationSpeed.connect = </Root/BubbleMaterial.inputs:AnimationSpeed>
            color3f inputs:NoiseColor = (0.55779874, 0.5818299, 0.1186626) (
                colorSpace = "srgb_displayp3"
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (970.98047, 287.4336)
                        int stackingOrderInSubgraph = 1948
                    }
                }
            )
            float3 inputs:NoiseOffset (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (354.50278, -20.667929)
                        int stackingOrderInSubgraph = 1945
                    }
                }
            )
            float inputs:NoiseScale (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (497.5, 271)
                        int stackingOrderInSubgraph = 1966
                    }
                }
            )
            float inputs:NoiseScale.connect = </Root/BubbleMaterial.inputs:NoiseScale>
            color3f outputs:Multiply_out.connect = </Root/BubbleMaterial/GenerateColorNoise_2/Multiply.outputs:out>
            float2 ui:nodegraph:node:pos = (-782.0897, 440.60422)
            int ui:nodegraph:node:stackingOrder = 1855
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1327.75, 195.75)

            def Shader "Add_1"
            {
                uniform token info:id = "ND_add_vector3"
                float3 inputs:in1.connect = </Root/BubbleMaterial/GenerateColorNoise_2/Add_5.outputs:out>
                float3 inputs:in2.connect = </Root/BubbleMaterial/GenerateColorNoise_2/Position.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (664.25, 93.5)
                int ui:nodegraph:node:stackingOrder = 1934
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Time"
            {
                uniform token info:id = "ND_time_float"
                float outputs:out
                float2 ui:nodegraph:node:pos = (79.25, 27.5)
                int ui:nodegraph:node:stackingOrder = 1946
            }

            def Shader "Add_5"
            {
                uniform token info:id = "ND_add_vector3FA"
                float3 inputs:in1.connect = </Root/BubbleMaterial/GenerateColorNoise_2.inputs:NoiseOffset>
                float inputs:in2.connect = </Root/BubbleMaterial/GenerateColorNoise_2/Multiply_6.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (497.5, 63.5)
                int ui:nodegraph:node:stackingOrder = 1934
            }

            def Shader "Multiply_6"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </Root/BubbleMaterial/GenerateColorNoise_2/Time.outputs:out>
                float inputs:in2.connect = </Root/BubbleMaterial/GenerateColorNoise_2.inputs:AnimationSpeed>
                float outputs:out
                float2 ui:nodegraph:node:pos = (289, 45.5)
                int ui:nodegraph:node:stackingOrder = 1934
            }

            def Shader "Multiply_1"
            {
                uniform token info:id = "ND_multiply_vector3FA"
                float3 inputs:in1.connect = </Root/BubbleMaterial/GenerateColorNoise_2/Add_1.outputs:out>
                float inputs:in2.connect = </Root/BubbleMaterial/GenerateColorNoise_2.inputs:NoiseScale>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (781, 154.5)
                int ui:nodegraph:node:stackingOrder = 1934
            }

            def Shader "Position"
            {
                uniform token info:id = "ND_position_vector3"
                string inputs:space = "world"
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (497.5, 162.5)
                int ui:nodegraph:node:stackingOrder = 1944
            }

            def Shader "Noise3D"
            {
                uniform token info:id = "ND_noise3d_color3"
                float3 inputs:amplitude = (0.1, 0.1, 0.1)
                float inputs:pivot = 0
                prepend float3 inputs:position.connect = </Root/BubbleMaterial/GenerateColorNoise_2/Multiply_1.outputs:out>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (954.68854, 127.91784)
                int ui:nodegraph:node:stackingOrder = 1965
            }

            def Shader "Multiply"
            {
                uniform token info:id = "ND_multiply_color3"
                prepend color3f inputs:in1.connect = </Root/BubbleMaterial/GenerateColorNoise_2/Noise3D.outputs:out>
                color3f inputs:in2.connect = </Root/BubbleMaterial/GenerateColorNoise_2.inputs:NoiseColor>
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (1148, 195.75)
                int ui:nodegraph:node:stackingOrder = 1934
            }
        }

        def Shader "Add_1"
        {
            uniform token info:id = "ND_add_color3"
            color3f inputs:in1.connect = </Root/BubbleMaterial/GenerateColorNoise_1.outputs:Multiply_out>
            color3f inputs:in2.connect = </Root/BubbleMaterial/GenerateColorNoise_2.outputs:Multiply_out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-363.7773, 235.0332)
            int ui:nodegraph:node:stackingOrder = 1840
        }

        def Shader "Noise3D"
        {
            uniform token info:id = "ND_noise3d_float"
            float inputs:pivot
            float3 inputs:position = (-0.25, 0, 0)
            float3 inputs:position.connect = </Root/BubbleMaterial/Multiply.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-359.69604, 646.4373)
            int ui:nodegraph:node:stackingOrder = 2568
        }

        def Shader "Position"
        {
            uniform token info:id = "ND_position_vector3"
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-721.619, 734.8924)
            int ui:nodegraph:node:stackingOrder = 2568
        }

        def Shader "PopHolesScale"
        {
            uniform token info:id = "ND_constant_float"
            float inputs:value = 30
            float outputs:out
            float2 ui:nodegraph:node:pos = (-749.2671, 832.87024)
            int ui:nodegraph:node:stackingOrder = 2568
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_vector3FA"
            prepend float3 inputs:in1.connect = </Root/BubbleMaterial/Position.outputs:out>
            float inputs:in2.connect = </Root/BubbleMaterial/PopHolesScale.outputs:out>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-553.34283, 735.31213)
            int ui:nodegraph:node:stackingOrder = 2568
        }

        def Shader "Step"
        {
            uniform token info:id = "ND_realitykit_step_float"
            float inputs:edge = 0
            float inputs:edge.connect = None
            float inputs:in.connect = </Root/BubbleMaterial/Add_2.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-1.6871643, 418.36536)
            int ui:nodegraph:node:stackingOrder = 2587
        }

        def Shader "Add_2"
        {
            uniform token info:id = "ND_add_float"
            float inputs:in1.connect = </Root/BubbleMaterial/Noise3D.outputs:out>
            float inputs:in2.connect = </Root/BubbleMaterial/Remap.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-150.88881, 569.0011)
            int ui:nodegraph:node:stackingOrder = 2589
        }

        def Shader "Remap"
        {
            uniform token info:id = "ND_remap_float"
            float inputs:in.connect = </Root/BubbleMaterial.inputs:Pop>
            float inputs:inhigh
            float inputs:inlow
            float inputs:outhigh
            float inputs:outlow = -1
            float outputs:out
            float2 ui:nodegraph:node:pos = (-235.94867, 867.96277)
            int ui:nodegraph:node:stackingOrder = 2568
        }

        def Shader "Remap_1"
        {
            uniform token info:id = "ND_remap_float"
            float inputs:in.connect = </Root/BubbleMaterial/Step.outputs:out>
            float inputs:inhigh
            float inputs:inlow
            float inputs:outhigh = 0.25
            float inputs:outlow
            float outputs:out
            float2 ui:nodegraph:node:pos = (129.47237, 192.94897)
            int ui:nodegraph:node:stackingOrder = 2595
        }
    }
}

